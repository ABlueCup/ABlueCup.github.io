{"meta":{"title":"卡而的博客","subtitle":"vim  grunt webpack less bootstrap jqueryUI bower http-server","description":"优雅源自技术的丰富和成熟。","author":"卡而","url":"http://yoursite.com"},"pages":[{"title":"categories","date":"2018-06-07T05:48:59.000Z","updated":"2018-06-07T05:49:48.722Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-06-07T05:45:29.000Z","updated":"2018-06-07T05:46:17.308Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"《图解HTTP》笔记","slug":"《图解HTTP》笔记","date":"2018-12-17T06:30:02.000Z","updated":"2018-12-18T00:59:34.137Z","comments":true,"path":"2018/12/17/《图解HTTP》笔记/","link":"","permalink":"http://yoursite.com/2018/12/17/《图解HTTP》笔记/","excerpt":"2018年12月13日购买书籍《图解HTTP》,作者上野宣，17日到达。下文是阅读时的笔记","text":"2018年12月13日购买书籍《图解HTTP》,作者上野宣，17日到达。下文是阅读时的笔记 TCP/IPTCP/IP协议是网络中一系列协议的统称。TCP/IP协议将网络分成四个层次：应用层、传输层、网络层、链路层。 - 应用层是服务与客户通信的活动 - 传输层TCP将应用层的数据报划分成许多小的数据报，并添加报头，负责传输与传输成功与否 - 网络层IP选择传输线路 - 链路层与硬件相关 https://fuzeauth.3m.com/wps/myportal/ja_JP/$project/GMAWS-7267-CompanyJP/3M/facility-safety-jp/","categories":[],"tags":[]},{"title":"fcc知识整理","slug":"fcc知识整理","date":"2018-12-13T08:19:23.000Z","updated":"2018-12-18T07:15:26.288Z","comments":true,"path":"2018/12/13/fcc知识整理/","link":"","permalink":"http://yoursite.com/2018/12/13/fcc知识整理/","excerpt":"本篇博客主要整理在free code camp 上学习时遇到的问题和解决方法","text":"本篇博客主要整理在free code camp 上学习时遇到的问题和解决方法 angular http中的跨域问题做page的时候遇到了$http.jsonp()出现错误，解决方法如下123456.controller(&apos;contrlName&apos;,function($scope,$http,$sce)&#123; $http.jsonp($sce.trustAsResourceUrl(url)) .then(function(reponse)&#123; //console.log &#125;)&#125;) angular img引入链接 使用 ng-src1&lt;img ng-src=&quot;&#123;&#123;url&#125;&#125;&quot;/&gt; juqery 判断元素在数组或者对象中的位置 index();12array.index(obj);obj.index(obj); css 文字太长，不换行隐藏12345&#123; overflow:hidden; text-overflow: ellipsis; white-space: nowrap;&#125; bootstrap 文件引用12345678&lt;!-- 最新版本的 Bootstrap 核心 CSS 文件 --&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css&quot; integrity=&quot;sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;!-- 可选的 Bootstrap 主题文件（一般不用引入） --&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap-theme.min.css&quot; integrity=&quot;sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;!-- 最新的 Bootstrap 核心 JavaScript 文件 --&gt;&lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/js/bootstrap.min.js&quot; integrity=&quot;sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;","categories":[],"tags":[{"name":"fcc","slug":"fcc","permalink":"http://yoursite.com/tags/fcc/"}]},{"title":"日常总结","slug":"日常总结","date":"2018-12-12T05:55:38.000Z","updated":"2018-12-12T06:01:42.327Z","comments":true,"path":"2018/12/12/日常总结/","link":"","permalink":"http://yoursite.com/2018/12/12/日常总结/","excerpt":"此处是工作中遇到的小问题的总结：","text":"此处是工作中遇到的小问题的总结： 1、a标签的选择问题需要修改带class的a标签的hover的文字颜色，方式如下 123456&lt;style&gt; a.egHyperlink:hover&#123; color:red; &#125;&lt;/style&gt;&lt;a href=&quot;#&quot; class=&quot;egHyperlink&quot;&gt;smile&lt;/a&gt; 2、hr分割线需要一条粉红色的分割线，宽度1px 12345678&lt;style&gt; hr&#123; height:2px; border:none; border-top:1px solid #00BFFF; &#125;&lt;/style&gt;&lt;hr&gt; 展示效果如下： 3、图片环绕文字 12345&lt;div&gt;&lt;img src=&quot;https://user-gold-cdn.xitu.io/2018/5/10/1634933fa3100474?w=1039&amp;h=579&amp;f=png&amp;s=16869&quot; width=&quot;50%&quot; style=&quot;float:left;border:1px solid #00BFFF;margin:0 10px 0 0;&quot;/&gt;&lt;p&gt;What I want to accomplish is for the text to be aligned with the top and left side of the floated img and to wrap immediately underneath with no margin. When I comment out the padding in &apos;p&apos; the image has no bottom margin, but I want the padding property to be active in my stylesheet.What I want to accomplish is for the text to be aligned with the top and left side of the floated img and to wrap immediately underneath with no margin. When I comment out the padding in &apos;p&apos; the image has no bottom margin, but I want the padding property to be active in my stylesheet.&lt;/p&gt;&lt;div style=&quot;clear:both;&quot;&gt;&lt;/div&gt;&lt;/div&gt; 效果如下： What I want to accomplish is for the text to be aligned with the top and left side of the floated img and to wrap immediately underneath with no margin. When I comment out the padding in ‘p’ the image has no bottom margin, but I want the padding property to be active in my stylesheet.What I want to accomplish is for the text to be aligned with the top and left side of the floated img and to wrap immediately underneath with no margin. When I comment out the padding in ‘p’ the image has no bottom margin, but I want the padding property to be active in my stylesheet. 4、颜色的值，遇到过几次需要使用颜色而又不是特别严格要求使用某一种颜色的问题，这个时候可以自己选择，今天先更新一个，以后遇到就记下来 #00BFFF rgb(2, 221, 223) 文字颜色，rgb(75,75,75) 5、@media screen问题总是遇到需要使用@media screen来区分设备的问题，却总是忘记代码，脑子啊，css样式要写在{}内 1234567891011# Mobile@media screen and (min-width: 480px)&#123;&#125;# Tablet@meida screen and (min-width: 768px)&#123;&#125;# Desktop@media screen and (min-width: 992px)&#123;&#125;# Huge@media screen and (min-width: 1280px)&#123;&#125; 或者 12345678# Phone@media screen and (max-width:320px)&#123;&#125;# Tablet@media screen and (min-width:321px) and (max-width:768px)&#123;&#125;# Desktop@media screen and (min-width:769px)&#123;&#125;","categories":[],"tags":[]},{"title":"JDK的安装和盒子模型","slug":"盒子模型","date":"2018-07-20T09:03:39.000Z","updated":"2018-12-12T09:22:52.070Z","comments":true,"path":"2018/07/20/盒子模型/","link":"","permalink":"http://yoursite.com/2018/07/20/盒子模型/","excerpt":"这边博客的主要内容一是介绍盒子模型，一是介绍JKD的环境搭建盒子模型有两种：w3c模型和IE模型，通过box-sizing的值来判断是哪一种；box-sizing=content-box，这是默认值,是w3c模型；box-sizing=border-box,是IE模型","text":"这边博客的主要内容一是介绍盒子模型，一是介绍JKD的环境搭建盒子模型有两种：w3c模型和IE模型，通过box-sizing的值来判断是哪一种；box-sizing=content-box，这是默认值,是w3c模型；box-sizing=border-box,是IE模型 盒子模型w3c模型width = 内容的宽度height = 内容的高度 IE模型width = 内容的宽度 + padding + border;height = 内容的高度 + padding + border; 背景色背景色占据的内容和padding,不占据border; outlineoutline （轮廓）是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用。注释：轮廓线不会占据空间，也不一定是矩形。它的用法和border是一样的。 JDK的环境搭建下载安装包https://www.oracle.com/technetwork/java/javase/downloads/jdk11-downloads-5066655.html 安装步骤双击.exe程序，按照顺序依次点击C:\\Program Files\\Java\\jdk11 设置环境变量我的电脑（右键）——&gt; 属性 ——&gt; 高级设置 ——&gt; 环境变量 在用户变量里面设置 JAVA_HOME = C:\\Program Files\\Java\\jdk11在系统变量里面添加到PATH C:\\Program Files\\Java\\jdk11\\bin 相关名词JVM java虚拟机JRE java程序的运行环境JDK java的开发包工具 phoneCatng-app 声明angularjs的作用域，创建一个名称为指定名称的module,同时创建$rootScope;ng-controller 创建一个控制器，同时创建一个$scope, $scope是$rootScope的后代，controller是 data model 和 view 之间的粘合剂； component 组件由 template 和 controller组成，使用 .component(name, cod)方法创建 1234567891011121314151617181920212223angular.module(&apos;myapp&apos;).component(&apos;phoneList&apos;,&#123; template: &apos;&lt;ul&gt;&apos;+ &apos;&lt;li ng-repeat=&quot;phone in $ctr.phones&quot;&gt;&apos;+ &apos;&lt;span&gt;&#123;&#123;phone.name&#125;&#125;&lt;/span&gt;&apos;+ &apos;&lt;span&gt;&#123;&#123;phone.snippet&#125;&#125;&lt;/span&gt;&apos;+ &apos;&lt;/li&gt;&apos;+ &apos;&lt;/ul&gt;&apos;, controller: function phoneListController()&#123; this.phones = [ &#123; name: &apos;Nexus S&apos;, snippet: &apos;Fast just got faster with Nexus S.&apos; &#125;, &#123; name: &apos;Motorola XOOM™ with Wi-Fi&apos;, snippet: &apos;The Next, Next Generation tablet.&apos; &#125;, &#123; name: &apos;MOTOROLA XOOM™&apos;, snippet: &apos;The Next, Next Generation tablet.&apos; &#125; ]; &#125; &#125;) 细节补充： 我们创建的组件名称是phoneList,但是在view中，要写&lt;phone-list&gt;&lt;/phone-list&gt;,否则，不显示；component的命名只能是驼峰规则，而view中的标签要用 “-” 代替；","categories":[],"tags":[{"name":"css","slug":"css","permalink":"http://yoursite.com/tags/css/"}]},{"title":"angular学习(一)","slug":"angular学习-一","date":"2018-07-18T02:30:15.000Z","updated":"2018-08-08T08:17:26.886Z","comments":true,"path":"2018/07/18/angular学习-一/","link":"","permalink":"http://yoursite.com/2018/07/18/angular学习-一/","excerpt":"angular简介：AngularJS诞生于2009年，由Misko Hevery 等人创建，后为Google所收购。是一款优秀的前端JS框架，已经被用于Google的多款产品当中。AngularJS有着诸多特性，最为核心的是：MVVM、模块化、自动化双向数据绑定、语义化标签、依赖注入等等。（参考：angular中文网）","text":"angular简介：AngularJS诞生于2009年，由Misko Hevery 等人创建，后为Google所收购。是一款优秀的前端JS框架，已经被用于Google的多款产品当中。AngularJS有着诸多特性，最为核心的是：MVVM、模块化、自动化双向数据绑定、语义化标签、依赖注入等等。（参考：angular中文网） 搭建环境参考： 链接： https://angular.io/guide/quickstart 视频： b站上大漠穷秋的视频，具体可以在b站上直接搜索大漠穷秋 通常，我们最开始学习angular的时候，只需要在网页中引入&lt;script src=&quot;angular....js&quot;&gt;&lt;/script&gt;即可。但是随着学习的深入，angular需要的工具的增加，我们需要安装越来越多的东西，像集成、测试等等，angular官方开发了针对angular的开发工具和库@angular/cli。安装命令如下：1npm install -g @angular/cli 因为@angular/cli中集成了sass工具，安装过程中会被墙，所以需要使用vpn。如果没有vpn的话，就需要使用cnpm工具安装，cnpm中国的npm,12npm install -g cnpmcnpm install -g @angular/cli 创建项目命令1ng new project-name 启动服务1ng serve --open 默认浏览器会自动启动并搜索: localhost:4200当然，我们安装环境的时候，也要学会卸载环境，命令如下：1npm uninstall -g @angular/cli 或者1cnpm uninstall -g @angular/cli $apply的使用$apply的解释让页面中的绑定的数据注意到数据的变化12345678910111213141516171819202122&lt;!DOCTYPE html&gt;&lt;html ng-app=&quot;weather&quot;&gt;&lt;head&gt; &lt;title&gt;angular&lt;/title&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;https://ajax.googleapis.com/ajax/libs/angularjs/1.7.2/angular.min.js&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot;&gt; angular.module(&quot;weather&quot;,[]) .controller(&quot;Ctrl&quot;,function($scope,$timeout)&#123; $scope.message = &quot;Waiting 2000ms for update&quot;; setTimeout(function()&#123; $scope.message = &quot;Timeout called!&quot;; &#125;,2000) &#125;) &lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;div ng:app ng-controller=&quot;Ctrl&quot;&gt; &#123;&#123;message&#125;&#125; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 在这个app中，2000毫秒之后，页面绑定的数据并没有变化。$scope.message确实已经变化了，并没有传递到前端页面上。 我们需要将控制器中数据的变化传递到页面上，就需要使用$apply。将函数绑定在$apply中,修改controller如下123456789.controller(&quot;Ctrl&quot;,function($scope)&#123; $scope.message = &quot;Waiting 2000ms for update&quot;; setTimeout(function()&#123; $scope.$apply(function()&#123; $scope.message = &quot;Timeout called!&quot;; &#125;) &#125;,2000) &#125;) 我自己想过一个比喻，关于$rootscope,$scope的，自然也可以应用在这里：我们使用ng创建一个app的时候,会随之产生一个$rootscope;在这个app中创建controller的时候，也会随之产生一个$scope.我们将app比作一个大剧场，大剧场里面有很多小剧场（controller)。大剧场有公共资源可以使用，他们放在一个房间里$rootscope;小剧场也有资源可以单独使用，他们也放在一个小房间里$scope。当然，小剧场自然可以使用大剧场的公共资源。那$apply,$timeout,$http是什么呢，$scope里面放了很多的data,而处理这些data，就像在茶水房里烧水一样，需要工具和方法，我们使用的是js或者jquery这些工具，那如何让剧场里的人知道水烧开了呢，$apply就是。$scope.$apply对于data的包裹，相当于将data纳入了ng框架当中。在ng自带的方法里面，他们会自动将data纳入ng中去，比如上面的代码可以修改成使用ng自带的$timeout方法123456.controller(&quot;Ctrl&quot;,function($scope,$timeout)&#123; $scope.message = &quot;Waiting 2000ms for update&quot;; $timeout(function()&#123; $scope.message = &quot;Timeout called!&quot;; &#125;) &#125;) $apply()和$apply(fn)的区别我们可以像上文中一样使用$apply(fn),将data包裹在$scope.$apply(fn)中；也可以在改变data后，使用$scope.$apply();1234setTime(function()&#123; $scope.message = &quot;Timeout Called!&quot;; $scope.$apply(); &#125;,2000) 但是这样不好的点在于，它不会在有error的时候抛出。 ng-xng-model数据双向绑定，ng-model=”name”相当于定义了一个名为name的数据变量 $scope.name,一处变而处处变。常常会用在表单里面，用以获取用户输入的数据。 Libraries ja_JP Content&gt;Group A&gt;CORP_FUZEExp&gt;CORP_FUZEExp_CountryCatalog_SiteArea&gt;CORP_FUZEExp_Catalog_WTB_SiteArea","categories":[{"name":"框架","slug":"框架","permalink":"http://yoursite.com/categories/框架/"}],"tags":[{"name":"angular","slug":"angular","permalink":"http://yoursite.com/tags/angular/"}]},{"title":"在Github搭建博客（二）","slug":"config-theme","date":"2018-06-05T08:45:35.000Z","updated":"2018-06-07T09:35:36.608Z","comments":true,"path":"2018/06/05/config-theme/","link":"","permalink":"http://yoursite.com/2018/06/05/config-theme/","excerpt":"选择主题我们搭建好博客后，会选择其他的主题而不是hexo自身携带的主题。网上可以搜索到许多的主题，可以击这里查看。我最初选择的是yilia，后来因为嫌字体太大（16px),想修改字体的大小，弄了半天也没弄好，干脆就放弃了，选择了next(它的字体是14px)。 安装next","text":"选择主题我们搭建好博客后，会选择其他的主题而不是hexo自身携带的主题。网上可以搜索到许多的主题，可以击这里查看。我最初选择的是yilia，后来因为嫌字体太大（16px),想修改字体的大小，弄了半天也没弄好，干脆就放弃了，选择了next(它的字体是14px)。 安装next next的地址README中详细地介绍了next的安装方法，我之前在windows10中安装了git，所以选择的方法是在git bash控制台切换到blog目录下输入命令1git clone https://github.com/iissnan/hexo-theme-next themes/next 之后在目录 blog/theme/下会看到目录 next,里面包含了next的主题文件。我们此时打开blog的 _config.yml 文件，找到theme那一行，主题修改为next，如下图所示在cmd控制台依次运行命令123hexo generatehexo server 在浏览器中输入 localhost:4000就可以查看了 next配置的选择建议先阅读整篇文档，尤其是里面的英文注释，有助于帮助理解。在这里，我写下自己做的配置 布局样式的选择四个布局样式都很不错，简洁大方，选择比较随意。 social的选择 menu 的选择 遇到的问题的解决方法标签和分类页面打不开安装和配置好next后，点击标签页和分类页，都出现了Error.原因是找不到页面。在menu的选择图中可以看到，我们将标签和分类的路径设置为 /tags/和/categories/，但是实际上这两个路径并不存在，这就需要我们新建这两个路径,在blog根目录下输入下面的命令行123hexo new page &quot;tags&quot;hexo new page &quot;categories&quot; 路径建好了，我到相应的路径下找到对应的页面进行修改，tags的页面中，要添加type: &quot;tags&quot;,categories的页面中，要添加type: &quot;categories&quot;,如下图所示 如何插入图片图片可以使用本地图片，也可以使用网络服务器上的图片，储存图片的服务器，叫图床。（图柜也比图床好理解吧） 修改hexo的配置文件_config.yml,找到post_asset_folder,将它的值改为true. 这样，当你hexo new &quot;post&quot;的时候，会生成与文件名相同的目录 安装hexo-asset-image插件，它是一个图片路径转换的插件， 1npm install https://github.com/CodeFalling/hexo-asset-image --save 之后就可以将图片放入相应的文件目录中，使用Markdown语法插入图片了 1![alt name](name.png) 这里有一个需要注意的地方就是，图片格式的大小写要一致，比如png不能写成PNG，至于为什么，还不清楚","categories":[{"name":"系统","slug":"系统","permalink":"http://yoursite.com/categories/系统/"}],"tags":[{"name":"搭建环境","slug":"搭建环境","permalink":"http://yoursite.com/tags/搭建环境/"}]},{"title":"vim的使用","slug":"vim的使用","date":"2018-06-04T09:00:52.000Z","updated":"2018-06-14T08:19:44.888Z","comments":true,"path":"2018/06/04/vim的使用/","link":"","permalink":"http://yoursite.com/2018/06/04/vim的使用/","excerpt":"参考链接http://yannesposito.com/Scratch/en/blog/Learn-Vim-Progressively/https://coolshell.cn/articles/5426.html上面的博客无论是原文还是翻译都比较有趣，本文是对这两篇博客的阅读笔记。 vim是什么？Vim is a highly configurable text editor for efficiently creating and changing any kind of text. It is included as “vi” with most UNIX systems and with Apple OS X.官网上的解释如上，翻译下就是： Vim 是高度可配置的编辑器，用于高效创建和修改各类文本。它包含在UNIX系统和苹果 OS X 系统的 vi中。","text":"参考链接http://yannesposito.com/Scratch/en/blog/Learn-Vim-Progressively/https://coolshell.cn/articles/5426.html上面的博客无论是原文还是翻译都比较有趣，本文是对这两篇博客的阅读笔记。 vim是什么？Vim is a highly configurable text editor for efficiently creating and changing any kind of text. It is included as “vi” with most UNIX systems and with Apple OS X.官网上的解释如上，翻译下就是： Vim 是高度可配置的编辑器，用于高效创建和修改各类文本。它包含在UNIX系统和苹果 OS X 系统的 vi中。 学习VIM的四个阶段（Survive）存活 i 进入insert模式（插入模式），按Esc回到Normal模式（普通模式）；x 删除当前光标所在的一个字符；:wq w(存盘) q(退出)；dd 删除当前行；p 粘贴hjkl 按照左下上右的顺序移动光标:help 命令的说明 (Feel Comfortable) 感觉舒适1、Insert mode variations（插入字符或行的命令）: a -&gt; 在光标后插入字符；o -&gt; 在当前行下插入新的一行；O -&gt; 在当前行上插入新的一行；cw -&gt; 删除当前光标所在位置的字符到一个单词结尾的字符 2、(Basic moves) 基本的移动命令 hjkl-&gt; 左下上右0 -&gt;(数字0) 移动到当前行的第一个字符；$ -&gt; 移动到当前行的最后一个字符；^ -&gt; 移动到不是blank的第一个字符；g_ -&gt;移动到不是blank的最后一个字符；/pattern -&gt;寻找字符pattern 3、(copy/paster)复制粘贴 yy -&gt; 复制；p -&gt; 粘贴； 4、(Undo/Redo)撤销/重复 u 撤销之前一步的动作；ctr-r 重复之前的命令 5、Load/Save/Quit/Change File (Buffer)下载/保存/退出/改变 文件（缓冲），即对已经完成的文件和正在修改的文件操作的命令 :e&lt;path/to/file&gt; 打开一个文件:saveas &lt;path/to/file&gt; 文件另存为:w 保存但是不退出;:x ZZ :wq 保存并退出:q! 退出但是不保存；:qa! 强制退出:bn :bp 展示下一个文件（同时打开多个文件的时候使用） (Better. Stronger. Faster.)更好 更强 更快Better . (点)重复上一个命令N 重复命令N次举例说明: 2dd 删除两行3p 粘贴文本3次100idesu[ESC] 写一百遍desu. 再写一百遍desu 再写3遍desu Stronger N(G) 光标移动到行Ngg 光标移动到第一行G 光标移动到最后一行Word moves w 移动到下一个word的首字母e 移动到本word的结尾W(大写) 定义WORD是一组word,以blank隔开，移动到下一个WORD的开头E 移动到本WORD的结尾 和 # ，移动到光标所在word相匹配的下一个word,或者上一个word * 下一个，# 上一个% 匹配括号移动，包括 (, {, [.(不理解什么意思) Faster一般的命令格式 &lt;command命令&gt;&lt;结束位置&gt;举例说明0y$ 0 表示光标移动到本行的开始位置；y 开始复制$ 复制到本行结束 另外附加的三个命令v 可视化gU 变成大写gu 变成小写 Vim SuperPowers(Vim超级编辑器)Move on current line (0 ^ $ g_ f F t T , ;) 在当前行移动命令(0 ^ $ g_ f F t T , ; 0 → go to column 0^ → go to first character on the line$ → go to the last columng_ → go to the last character on the linefa → go to next occurrence of the letter a on the line., (resp. ;) will find the next (resp. previous) occurrence.t, → go to just before the character ,.3fa → find the 3rd occurrence of a on this line.F and T → like f and t but backward.","categories":[{"name":"系统","slug":"系统","permalink":"http://yoursite.com/categories/系统/"}],"tags":[{"name":"vim","slug":"vim","permalink":"http://yoursite.com/tags/vim/"}]},{"title":"在Github上搭建博客","slug":"在Github上搭建博客","date":"2018-05-30T07:04:47.000Z","updated":"2018-06-07T09:03:59.911Z","comments":true,"path":"2018/05/30/在Github上搭建博客/","link":"","permalink":"http://yoursite.com/2018/05/30/在Github上搭建博客/","excerpt":"写在前面 为什么自己搭建博客？ 知乎上有关于这个问题的很详尽的回答？链接：https://www.zhihu.com/question/19916345。 我搭建博客用了多久? 大概一下午的时间，当然要感谢找到了一个比较清楚的资料，附上链接：教你免费搭建个人博客。也要感谢16年的时候，学习了linux系统的知识,阅读和操作起来都比较容易。 系统 windows 10 64位，编辑器：sublime text3，控制台：cmd","text":"写在前面 为什么自己搭建博客？ 知乎上有关于这个问题的很详尽的回答？链接：https://www.zhihu.com/question/19916345。 我搭建博客用了多久? 大概一下午的时间，当然要感谢找到了一个比较清楚的资料，附上链接：教你免费搭建个人博客。也要感谢16年的时候，学习了linux系统的知识,阅读和操作起来都比较容易。 系统 windows 10 64位，编辑器：sublime text3，控制台：cmd 搭建博客使用 hexo+Github 什么是hexo?Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。官方文档 什么是Github?GitHub is a development platform inspired by the way you work. From open source to business, you can host and review code, manage projects, and build software alongside millions of other developers. (GitHub是一个受你工作方式启发的开发平台。 从开源到商业，您可以托管和查看代码，管理项目，并与数百万其他开发人员一起构建软件。) click me 准备工作 配置 Github首先，你需要有一个Github的账号。在Github网站上注册账号，并记住自己的Username。我的Username是abluecup。登录，在网页左上方找到 New repository 按钮，点击创建名称为username.github.io的仓库。我的是username是abluecup,我创建的仓库名称就是abluecup.github.io 环境搭建 安装Node.js https://nodejs.org/en/ 安装 Git https://github.com/waylau/git-for-winNode.js和Git的安装，我都是全部默认安装的。当然，你可以根据自己的需要安装。关于Git的教程，推荐廖雪峰的教程。在这里给自己刨个坑，自己以后也会写关于Git的博客。-安装完成后，在开始菜单里找到“Git”-&gt;“Git Bash”，打开界面：输入 123git config --global user.name &quot;username&quot;git config --global user.email &quot;your email&quot;# username是你注册Github的username,your email是你注册Github时的email 安装Hexo打开cmd, 安装hexo,输入命令然后等待hexo安装完成： 1npm install -g hexo-cli 初始化博客 新建目录test. 进入gitbash控制界面，切换目录到test目录下，输入： 123hexo init blog# 成功提示INFO Start blogging with Hexo! 初始化完成之后，切换目录到blog下，输入命令： 1$ hexo generate 12345# 启动本地服务器$ hexo server# 在浏览器输入 http://localhost:4000/就可以看见网页和模板了INFO Start processingINFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop. 访问 http://localhost:4000/ ，我们会看到网站初始的模样 设置秘钥现在我们可以暂时关闭hexo的本地服务，在git的管理界面输入以下命令:1ssh-keygen -t rsa -C &quot;Github的注册邮箱地址&quot; 一路按Enter键过来就好，最后会得到信息： 1Your public key has been saved in /c/Users/user/.ssh/id_rsa.pub. 找到该文件，打开（sublime text），Ctrl + a复制里面的所有内容，然后进入Sign in to GitHub：https://github.com/settings/sshNew SSH key ——Title：blog —— Key：输入刚才复制的—— Add SSH key 配置博客在blog目录下，用sublime打开_config.yml文件，修改参数信息特别提醒，在每个参数的：后都要加一个空格修改网站相关信息12345678# Sitetitle: 卡而的博客subtitle:副标题description: 描述keywords:关键词author: 作者language:zh-CNtimezone:Asia/Shanghai 配置部署（我的是abluecup，修改成自己的）1234deploy: type: git repo: http://github.com/ABlueCup/ABlueCup.github.io branch: master 发布文章1hexo deploy 后续更新：MarkDown语法链接 遇到的问题： 执行 hexo deploy时，出现错误 error deployer not found:git执行如下代码 1npm install hexo-deployer-git --save 执行 hexo clean , hexo generate , hexo server , hexo deploy等命令时，当前目录必须是在博客根目录下，即 blog/ 文件夹 blog里面","categories":[{"name":"系统","slug":"系统","permalink":"http://yoursite.com/categories/系统/"}],"tags":[{"name":"搭建环境","slug":"搭建环境","permalink":"http://yoursite.com/tags/搭建环境/"}]}]}